<!DOCTYPE html>
<html>
<style>
	.docs-header {
		text-transform: uppercase;
		font-size: 1.4rem;
		letter-spacing: .2rem;
		font-weight: 600;
	}

	fieldset.scheduler-border {
		border: 1px groove #ddd !important;
		padding: 0 1.4em 1.4em 1.4em !important;
		margin: 0 0 1.5em 0 !important;
		-webkit-box-shadow: 0px 0px 0px 0px #000;
		box-shadow: 0px 0px 0px 0px #000;
	}

	legend.scheduler-border {
		font-size: 1.2em !important;
		font-weight: bold !important;
		text-align: left !important;
		width: auto;
		padding: 0 10px;
		border-bottom: none;
	}
</style>

<head>
	<meta charset="utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<title>BME280 - Szenzor</title>
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" type="text/css" media="screen" href="main.css" />
	<link rel="stylesheet" href="normalize.css">
	<link rel="stylesheet" href="skeleton.css">
</head>

<body>
	<div class="container">
		<form>
			<fieldset class="scheduler-border">
				<legend class="scheduler-border">
					<h3 class="docs-header">Jelenlegi adatok: </h3>
				</legend>

				<strong>Hőmérséklet:</strong>
				<span id="x"></span> °C
				<br/>
				<strong>Pártartam:</strong>
				<span id="y"></span> %
				<br\>
					<strong>Eszköz ID:</strong>
					[
					<span id="eszkozid"></span> ]
					<br\>
						<strong>Szenzor adatok küldésének gyakorisága:</strong>
						<span id="refreshrate"></span> perc
						<strong> utolsó feltöltés: </strong>
						<span id="stopper"></span> másodperce.
						<br\>
							<p>Szerver[1]:</p>
							<strong>IP:</strong>
							<span id="ipaddr1"></span>
							:
							<span id="port1"></span>
							<br\>
								<p>Szerver[2]:</p>
								<strong>IP:</strong>
								<span id="ipaddr2"></span>
								:
								<span id="port2"></span>

								<h6>Utoljára frissítve:
									<span id="ut"></span> másodperce.
									<span id="status"></span>
								</h6>
			</fieldset>
		</form>


		<div class="row">
			<div class="six columns">
				<form id="xform" onsubmit="return transmit(this)">
					<fieldset class="scheduler-border">
						<legend class="scheduler-border">
							<h3 class="docs-header">Eszköz ID:</h3>
						</legend>
						<input type="string" name="eszkozid" />
						<input type="submit" value="beállítás" />
						<br\>
					</fieldset>
				</form>
			</div>
			<div class="six columns">
				<form id="zform" onsubmit="return transmit(this)">
					<fieldset class="scheduler-border">
						<legend class="scheduler-border">
							<h3 class="docs-header">Szenzor olvasás gyakorisága:</h3>
						</legend>
						<input type="number" name="refreshrate" />
						<input type="submit" value="beállítás" />
						<br\>
					</fieldset>
				</form>
			</div>
		</div>





		<form id="yform" onsubmit="return transmit(this)">
			<fieldset class="scheduler-border">
				<legend class="scheduler-border">
					<h3 class="docs-header">Szerver[1] adatok:</h3>
				</legend>
				IP:
				<input type="string" name="ipaddr1" />
				<br\>
					Port:
					<input type="number" name="port1" />
					<input type="submit" value="beállítás" />
			</fieldset>
		</form>
		<form id="gform" onsubmit="return transmit(this)">
			<fieldset class="scheduler-border">
				<legend class="scheduler-border">
					<h3 class="docs-header">Szerver[2] adatok:</h3>
				</legend>
				IP:
				<input type="string" name="ipaddr2" />
				<br\>
					Port:
					<input type="number" name="port2" />
					<input type="submit" value="beállítás" />
			</fieldset>
		</form>




		<a class="button" href="wifi.htm">WiFi beállításai</a>
	</div>
	<script>
		function g(i) {
			return document.getElementById(i)
		};
		var xhttp, updateTime;

		function transmit(f) {
			if (!xhttp) { //prevent simultaneous requests
				g("status").innerHTML = "frissítés...";
				xhttp = new XMLHttpRequest();
				xhttp.open("POST", "/api");
				xhttp.send(f ? (new FormData(f)) : "");
				xhttp.onreadystatechange = function () {
					if (xhttp.readyState === XMLHttpRequest.DONE && xhttp.status === 200) {
						var data = JSON.parse(xhttp.responseText);
						g("x").innerHTML = data.x.toFixed(1);;
						g("y").innerHTML = data.y.toFixed(1);;
						g("eszkozid").innerHTML = data.eszkozid;
						g("ipaddr1").innerHTML = data.ipaddr1;
						g("port1").innerHTML = data.port1;
						g("ipaddr2").innerHTML = data.ipaddr2;
						g("port2").innerHTML = data.port2;
						g("refreshrate").innerHTML = data.refreshrate;
						time = data.stopper / 60000 * 60;
						g("stopper").innerHTML = time.toFixed(0);
						xhttp = null;
						g("status").innerHTML = "";
						updateTime = 0;
					}
				}
			}
			return false; //prevent form redirect
		}
		transmit();
		setInterval(function () {
			g("ut").innerHTML = ++updateTime;
		}, 1000);
		setInterval(transmit, 3000); //autoupdate display every 5s
	</script>

</body>

</html>